[Step_1]
Enable = True
Type = cmd
name = IntersectBAMWithRegions
description = get bam file with reads intersected with regions
program = %(samtools_path)s view
parameters = -h -F 2308 -f 2 %(input_dir)s/%(file_name)s%(bam_file_suffix)s -L %(regions_coordinates_bed)s -u -@ 3 %(cram_index)s | %(samtools_path)s sort -l 1 -@ 3 -o %(regions_aligments_file_bam)s -
constraint = Exists %(regions_aligments_file_bam)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_fwd_1, pe_condition; Step_2_fwd_SE
pe_condition = Bool %(is_paired_end)s
error_step = Step_-1

[Step_2_fwd_1]
Enable = True
Type = cmd
name = SeparateFwdHalf1
description = separated "forward" alignments - second mate mapped to +
program = %(samtools_path)s view
parameters = -b -f 128 -F 16 -o %(strand_1_temp_1)s %(regions_aligments_file_bam)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_fwd_1_index
error_step = Step_-1

[Step_2_fwd_2]
Enable = True
Type = cmd
name = SeparateFwdHalf2
description = separated "forward" alignments - first mate mapped to -
program = %(samtools_path)s view
parameters = -b -f 80 -o %(strand_1_temp_2)s %(regions_aligments_file_bam)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_fwd_2_index
error_step = Step_-1

[Step_2_fwd_2_index]
Enable = True
Type = cmd
name = indexFwdHalf2
description = index "forward" alignments - first mate mapped to -
program = %(samtools_path)s index
parameters = %(strand_1_temp_2)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_fwd_merge
error_step = Step_-1

[Step_2_fwd_merge]
Enable = True
Type = cmd
name = mergeFwd
description = merge all the "forward" alignments
program = %(samtools_path)s merge
parameters = -f %(regions_aligments_file_bam_strand_1)s %(strand_1_temp_1)s %(strand_1_temp_2)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_fwd_index
error_step = Step_-1

[Step_2_fwd_SE]
Enable = True
Type = cmd
name = SeparateFwdSE
description = separated "forward" alignments -  mapped to +
program = %(samtools_path)s view
parameters = -b -f 16 -o %(regions_aligments_file_bam_strand_1)s %(regions_aligments_file_bam)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_fwd_index
error_step = Step_-1

[Step_2_fwd_index]
Enable = True
Type = cmd
name = indexRevHalf2
description = index "forward" alignments - first mate mapped to -
program = %(samtools_path)s index
parameters = %(regions_aligments_file_bam_strand_1)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_rev_1, pe_condition; Step_2_rev_SE
pe_condition = Bool %(is_paired_end)s
error_step = Step_-1

[Step_2_rev_SE]
Enable = True
Type = cmd
name = SeparateFwdSE
description = separated "forward" alignments -  mapped to +
program = %(samtools_path)s view
parameters = -b -F 16 -o %(regions_aligments_file_bam_strand_2)s %(regions_aligments_file_bam)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_rev_index
error_step = Step_-1

[Step_2_fwd_1_index]
Enable = True
Type = cmd
name = indexFwdHalf1
description = index "forward" alignments - second mate mapped to +
program = %(samtools_path)s index
parameters = %(strand_1_temp_1)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_fwd_2
error_step = Step_-1

[Step_2_rev_1]
Enable = True
Type = cmd
name = SeparateRevHalf1
description = separated "forward" alignments - second mate mapped to -
program = %(samtools_path)s view
parameters = -b -f 144 -o %(strand_2_temp_1)s %(regions_aligments_file_bam)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_rev_1_index
error_step = Step_-1

[Step_2_rev_1_index]
Enable = True
Type = cmd
name = indexRevHalf1
description = index "forward" alignments - second mate mapped to +
program = %(samtools_path)s index
parameters = %(strand_2_temp_1)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_rev_2
error_step = Step_-1

[Step_2_rev_2]
Enable = True
Type = cmd
name = SeparateRevHalf2
description = separated "forward" alignments - first mate mapped to +
program = %(samtools_path)s view
parameters = -b -f 64 -F 16 -o %(strand_2_temp_2)s %(regions_aligments_file_bam)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_rev_2_index
error_step = Step_-1

[Step_2_rev_2_index]
Enable = True
Type = cmd
name = indexRevHalf2
description = index "forward" alignments - first mate mapped to -
program = %(samtools_path)s index
parameters = %(strand_2_temp_2)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_rev_merge
error_step = Step_-1

[Step_2_rev_merge]
Enable = True
Type = cmd
name = mergeRev
description = merge all the "reverse" alignments
program = %(samtools_path)s merge
parameters = -f %(regions_aligments_file_bam_strand_2)s %(strand_2_temp_1)s %(strand_2_temp_2)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_2_rev_index
error_step = Step_-1

[Step_2_rev_index]
Enable = True
Type = cmd
name = indexRevHalf2
description = index "forward" alignments - first mate mapped to -
program = %(samtools_path)s index
parameters = %(regions_aligments_file_bam_strand_2)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_4_untrimmed
error_step = Step_-1

# no trimming

[Step_4_untrimmed]
Enable = True
Type = cmd
name = IndexBam
description = create BAI if doesnt exist
program = %(samtools_path)s index
parameters = %(regions_aligments_file_bam_strand_1)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_4_untrimmed_strand_2
error_step = Step_-1

[Step_4_untrimmed_strand_2]
Enable = True
Type = cmd
name = IndexBam
description = create BAI if doesnt exist
program = %(samtools_path)s index
parameters = %(regions_aligments_file_bam_strand_2)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_5_untrimmed
error_step = Step_-1

[Step_5_untrimmed]
Enable = True
Type = cmd
name = pileup
description = pileup
program = %(samtools_path)s mpileup
parameters = -B %(pileup_filtering)s -d %(pileup_depth_lim)s %(regions_aligments_file_bam_strand_1)s -o %(regions_pileup_strand_1)s -l %(regions_coordinates_bed)s
constraint = Exists %(regions_pileup_with_count_strand_1)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_5_untrimmed_strand2
error_step = Step_-1

[Step_5_untrimmed_strand2]
Enable = True
Type = cmd
name = pileup strand2
description = pileup
program = %(samtools_path)s mpileup
parameters = -B %(pileup_filtering)s -d %(pileup_depth_lim)s %(regions_aligments_file_bam_strand_2)s -o %(regions_pileup_strand_2)s -l %(regions_coordinates_bed)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_5_index
error_step = Step_-1

[Step_5_index]
Enable = True
max_processes_num = 1
Type = cmd
name = GenerateGenomeIndex
description = generate genome index, if doesnt exist
program = %(java_path)s -jar %(ei_java_utils_jar)s GenerateIndex
parameters = -i %(regions_coordinates_bed)s -g %(genome_fasta)s -o %(genome_index_path)s -b %(bedtools_path)s
constraint = Exists %(genome_index_path)s
next_step = Step_6
error_step = Step_-1

[Step_6]
Enable = True
Type = cmd
name = CountPileup
description = count pileup
program = %(java_path)s -jar %(ei_java_utils_jar)s PileupToCount
parameters = -i %(regions_pileup)s -o %(regions_pileup_with_count)s -q %(PileupToCount_quality_threshold)s -f %(PileupToCount_quality_offset)s -g %(genome_index_path)s
constraint = Exists %(regions_pileup_with_count)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_7
error_step = Step_-1

[Step_7]
Enable = True
Type = cmd
name = CountPileup strand 1
description = count pileup
program = %(java_path)s -jar %(ei_java_utils_jar)s PileupToCount
parameters = -i %(regions_pileup_strand_1)s -o %(regions_pileup_with_count_strand_1)s -q %(PileupToCount_quality_threshold)s -f %(PileupToCount_quality_offset)s -g %(genome_index_path)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_7_strand2
error_step = Step_-1

[Step_7_strand2]
Enable = True
Type = cmd
name = CountPileup strand2
description = count pileup
program = %(java_path)s -jar %(ei_java_utils_jar)s PileupToCount
parameters = -i %(regions_pileup_strand_2)s -o %(regions_pileup_with_count_strand_2)s -q %(PileupToCount_quality_threshold)s -f %(PileupToCount_quality_offset)s -g %(genome_index_path)s
constraint = Exists %(regions_pileup_with_count_strand_2)s And Not Bool %(run_force_bam_preprocessing)s
next_step = Step_8
error_step = Step_-1

#remove files
[Step_8]

Enable = True
Type = cmd
name = remove mpileup file
description = remove tmp vcf file
program = rm
parameters = %(regions_pileup_strand_1)s %(regions_pileup_strand_2)s
constraint = Not Exists %(regions_pileup_strand_1)s And Not Exists %(regions_pileup_strand_2)s
next_step = Step_9
error_step = Step_-1

[Step_9]
Enable = True
Type = cmd
name = remove BAMs, BEDs and BAIs
description = Remove any BAMs, BED and indexes files created
program = find
parameters = %(output_dir)s -name '*.ba?'| xargs rm
constraint = Not Exists %(regions_aligments_file_bam)s
next_step = exit
error_step = exit

[Step_-1]
Enable = True
Type = cmd
name = error stage
description = error stage
program = echo
parameters = 'Failed To Run On %(input_dir)s/%(file_name)s%(bam_file_suffix)s!'
next_step = exit
error_step = exit

[DEFAULT]
output_dir = 
input_dir = 
file_name = 

genome_fasta = 
regions_coordinates_bed = 
genome_index_path = %(regions_coordinates_bed)s.GenomeIndex.jsd
#per step
max_processes_num = 5
#overall
overall_max_processes_num = 10

# dependancy and tools run paths
bedtools_path = bedtools
samtools_path = samtools
ei_java_utils_jar = /home/biodocker/bin/EditingIndexJavaUtils.jar

java_path = java

regions_name = DeNovoSites


#If set with True will override existing pileups.
run_force_bam_preprocessing = False


# pileup run params
#What flags to filter during pileup (e.g. -ff flag, see samtools documentation for more details) , this is set to samtools default
pileup_filtering = --ff SECONDARY,UNMAP,DUP -Q 0
# -d flag (see samtools documentation for more details), newer samtools versions may not need this at all
pileup_depth_lim = 10000000

# For cmpileup creation - PHRED score offset and minimal score to count
PileupToCount_quality_offset = 33
PileupToCount_quality_threshold = 30


# File names formats
ei_output_dir = %(output_dir)s

bam_file_suffix = Aligned.sortedByCoord.out.bam
aligner_output_format = %(output_dir)s/%(file_name)s
input_bam_file = %(aligner_output_format)s%(bam_file_suffix)s

regions_aligments_file_bam = %(ei_output_dir)s/%(file_name)s_region_%(regions_name)s_alignments.bam

regions_pileup = %(ei_output_dir)s/%(file_name)s_%(regions_name)s.mpileup
regions_pileup_with_count = %(ei_output_dir)s/%(file_name)s_%(regions_name)s_mpileup.cmpileup



#Stranded Analysis
strand_1_temp_2 = %(ei_output_dir)s/%(file_name)s_region_%(regions_name)s_alignments_strand_fwd_tmp2.bam
strand_1_temp_1 = %(ei_output_dir)s/%(file_name)s_region_%(regions_name)s_alignments_strand_fwd_tmp1.bam
regions_aligments_file_bam_strand_1 = %(ei_output_dir)s/%(file_name)s_region_%(regions_name)s_alignments_strand_1.bam
strand_2_temp_1 = %(ei_output_dir)s/%(file_name)s_region_%(regions_name)s_alignments_strand_rev_tmp1.bam
strand_2_temp_2 = %(ei_output_dir)s/%(file_name)s_region_%(regions_name)s_alignments_strand_rev_tmp2.bam
regions_aligments_file_bam_strand_2 = %(ei_output_dir)s/%(file_name)s_region_%(regions_name)s_alignments_strand_2.bam

regions_pileup_strand_1 = %(ei_output_dir)s/%(file_name)s_%(regions_name)s_strand_forward.mpileup
regions_pileup_with_count_strand_1 = %(ei_output_dir)s/%(file_name)s_%(regions_name)s_mpileup_strand_forward.cmpileup
regions_pileup_strand_2 = %(ei_output_dir)s/%(file_name)s_%(regions_name)s_strand_backward.mpileup
regions_pileup_with_count_strand_2 = %(ei_output_dir)s/%(file_name)s_%(regions_name)s_mpileup_strand_backward.cmpileup

is_paired_end = False

cram_index =  -T %(genome_fasta)s