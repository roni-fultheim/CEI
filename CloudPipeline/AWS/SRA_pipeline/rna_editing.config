includeConfig './rna_editing.user_params.config'
params.help = false

//  ---------------------> general params
//param to be override from the terminal with --run_title <deserved name>
// all results will be saved in the bucket under this name
params.run_title = "undefined"
// list of SRA accession numbers to download
params.srrACC_list = ""
// path to your local NGC file for downloading restricted SRA files
params.NGC_file = ""




profiles {
    // single-end or paired-end
    SE { params.isPaired = false }
    PE { params.isPaired = true }
    // stranded or unstranded
    stranded { params.isStranded = true }
    unstranded { params.isStranded = false }
    // read length
    RL50 { params.read_length = "50" }
    RL75 { params.read_length = "75" }
    RL100 { params.read_length = "100" }
    RL125 { params.read_length = "125" }
    RL150 {params.read_length="150"}
    // organism
    hg38 {
        params.organism = "homo sapiens"
        params.assembly = "hg38"
        // Sites
        params.cmpileup_sites_relative = "Resources/Sites/HomoSapiens/hg38Sites_GabayEtAl_NatureCom_PMID35246538.AG.bed" // Gabay et al Sites
        params.genome_cmpileup_sites_index_name = "ucscHg38Genome.fa.hg38Sites_GabayEtAl_NatureCom_PMID35246538.AG.bed.GenomeIndex.jsd" // Gabay et al Sites index
        params.genome_cmpileup_sites_index_relative = "Resources/Sites/HomoSapiens/${params.genome_cmpileup_sites_index_name}"
        // Salmon
        params.transcripts_index_relative = "Salmon1.10.2/HomoSapiens/hg38"
        params.tx2id_geneMap_relative = "Resources/RefSeqAnnotations/HomoSapiens/ucscHg38RefSeqCurated.tsv"
        // General
        params.refseq_file_relative = "Resources/RefSeqAnnotations/HomoSapiens/ucscHg38RefSeqCurated.bed.gz"
        params.expression_file_relative = "Resources/GenesExpression/HomoSapiens/ucscHg38GTExGeneExpression.bed.gz"
        params.genome_file_relative = "Resources/Genomes/HomoSapiens/ucscHg38Genome.fa"
        params.snp_file_relative = "Resources/SNPs/HomoSapiens/ucscHg38CommonGenomicSNPs151.bed.gz"
        // Editing Index
        params.regions_AEI_relative = "Resources/Regions/HomoSapiens/ucscHg38Alu.bed.gz"
        params.genome_regions_index_AEI_name = "ucscHg38Genome.fa.ucscHg38Alu.bed.gz.GenomeIndex.jsd"
        params.genome_regions_index_AEI_relative = "Resources/Regions/HomoSapiens/${params.genome_regions_index_AEI_name}"
        params.regions_CEI_relative = "Resources/Regions/HomoSapiens/hg38.Alu3pUTR_minLen200_17022021.InvertedRepeatsIn3pUTR.sorted.merged.bed.gz"
        params.genome_regions_index_CEI_name = "ucscHg38Genome.fa.hg38.Alu3pUTR_minLen200_17022021.InvertedRepeatsIn3pUTR.sorted.merged.bed.gz.GenomeIndex.jsd"
        params.genome_regions_index_CEI_relative = "Resources/Regions/HomoSapiens/${params.genome_regions_index_CEI_name}" 
        // STAR
        params.genome_relative_path="STAR2.7.10b/HomoSapiens/hg38/sjdbOverhang${params.read_length}"
    }

    mm10 {
        params.organism = "mus musculus"
        params.assembly = "mm10"
        // Sites
        params.cmpileup_sites_relative = "Resources/Sites/MusMusculus/mm10Sites_PintoEtAl_GenomeBiol_PMID24393560.bed" // Pinto et al Sites
        params.genome_cmpileup_sites_index_name = "ucscMm10Genome.fa.mm10Sites_PintoEtAl_GenomeBiol_PMID24393560.bed.GenomeIndex.jsd"
        params.genome_cmpileup_sites_index_relative = "Resources/Sites/MusMusculus/${params.genome_cmpileup_sites_index_name}" 
        // Salmon
        params.transcripts_index_relative = "Salmon1.10.2/MusMusculus/mm10"
        params.tx2id_geneMap_relative = "Resources/RefSeqAnnotations/MusMusculus/ucscMM10RefSeqCurated.tsv"
        // General
        params.refseq_file_relative = "Resources/RefSeqAnnotations/MusMusculus/ucscMM10RefSeqCurated.bed.gz"
        params.expression_file_relative = "Resources/GenesExpression/MusMusculus/ucscMM10GeneExpression.bed.gz"
        params.genome_file_relative = "Resources/Genomes/MusMusculus/ucscMm10Genome.fa"
        params.snp_file_relative = "Resources/SNPs/MusMusculus/ucscMM10CommonGenomicSNPs142.bed.gz"
        // Editing Index
        params.regions_AEI_relative = "Resources/Regions/MusMusculus/ucscMM10SINE_B1_B2.bed.gz"
        params.genome_regions_index_AEI_name = "ucscMm10Genome.fa.ucscMM10SINE_B1_B2.bed.gz.GenomeIndex.jsd"
        params.genome_regions_index_AEI_relative = "Resources/Regions/MusMusculus/${params.genome_regions_index_AEI_name}"
        params.regions_CEI_relative = "Resources/Regions/MusMusculus/mm10.AluB1AndB2_3pUTR_minLen100_17022021.InvertedRepeatsIn3pUTR.sorted.merged.bed.gz"
        params.genome_regions_index_CEI_name = "ucscMm10Genome.fa.mm10.AluB1AndB2_3pUTR_minLen100_17022021.InvertedRepeatsIn3pUTR.sorted.merged.bed.gz.GenomeIndex.jsd"
        params.genome_regions_index_CEI_relative = "Resources/Regions/MusMusculus/${params.genome_regions_index_CEI_name}" 
        // STAR
        params.genome_relative_path="STAR2.7.10b/MusMusculus/mm10/sjdbOverhang${params.read_length}"
    }
    
}

// ---------------------> params
// length of reads for fastp - if its not as the fixed sizes of the profiles(which needed fo STAR genome index),
// can be overriden here
params.fastp_read_length = "${params.read_length}"
// if to run salmon
params.runSalmon = true
// threshold for fastqs compression (GB) - if the fastq is larger then this, it will be compressed to prevent exciding disk space
params.fastqs_compression_threshold = 90
// STAR params
// filter reads with less then %/100 of matching bases -(updated to global-alu-optimal=0.95 - previous value was 0.66)
params.outFilterMatchNminOverLread = "0.95"
// CMPileup params
params.cmpileup_ini_relative= (params.isStranded) ? "Resources/Sites/CMPileup.stranded.ini" : "Resources/Sites/CMPileup.ini" 


//---------------- Results (relative paths)
// --fastp
params.fastp_jsons_relative = "Results/${params.assembly}/ReadLength${params.read_length}/Fastp_json/${params.run_title}"
// -- STAR
params.star_stats_relative = "Results/${params.assembly}/ReadLength${params.read_length}/STAR_stats/${params.run_title}"
// -- Salmon
params.genes_expressions_relative = "Results/${params.assembly}/ReadLength${params.read_length}/Salmon/${params.run_title}"
// -- CMPileup
params.cmpileups_tables_relative = "Results/${params.assembly}/ReadLength${params.read_length}/cmpileups/${params.run_title}"
// -- Editing Index
params.EI_results_path_relative = "Results/${params.assembly}/ReadLength${params.read_length}/EI_results/${params.run_title}"
// /usr/bin/time stats 
params.EI_run_stats_relative = "Results/${params.assembly}/ReadLength${params.read_length}/EI_run_stats/${params.run_title}"


// ---------- make full paths from all relative paths ------------------------
//name of your dir in the bucket for nextflow mountig for all files (see also params.mount)
params.mount_bucket_dir="main"
// for accessing the bucket directly from the machine in google batch, we can use the automatic bucket mounting
params.mount_path = "s3://${params.bucket_name}/${params.mount_bucket_dir}"
// Salmon index resource
params.transcripts_index = "${params.mount_path}/${params.transcripts_index_relative}"
// Salmon transcript to gene resource
params.tx2id_geneMap = "${params.mount_path}/${params.tx2id_geneMap_relative}"
// STAR genome index resource
params.genome_index_full = "${params.mount_path}/${params.genome_relative_path}"
// RefSeq genes resource
params.refseq_file = "${params.mount_path}/${params.refseq_file_relative}"
// Expression for RNA editing index resource
params.expression_file = "${params.mount_path}/${params.expression_file_relative}"
// Genome resource
params.genome_file = "${params.mount_path}/${params.genome_file_relative}"
// SNPs resource
params.snp_file = "${params.mount_path}/${params.snp_file_relative}"
// Alu regions resource
params.regions_AEI = "${params.mount_path}/${params.regions_AEI_relative}"
// Inverted Alu in 3'UTR resource
params.regions_CEI = "${params.mount_path}/${params.regions_CEI_relative}"
// Alu regions index resource
params.genome_regions_index_AEI = "${params.mount_path}/${params.genome_regions_index_AEI_relative}"
// Inverted Alu in 3'UTR index resource
params.genome_regions_index_CEI = "${params.mount_path}/${params.genome_regions_index_CEI_relative}"
// CMPileup configuration
params.cmpileup_ini="${params.mount_path}/${params.cmpileup_ini_relative}"
// CMPileup site resource
params.cmpileup_sites="${params.mount_path}/${params.cmpileup_sites_relative}"
// CMPileup site index resource
params.genome_cmpileup_sites_index = "${params.mount_path}/${params.genome_cmpileup_sites_index_relative}"
// RNA editing index results
params.EI_results_path = "${params.mount_path}/${params.EI_results_path_relative}"
// RNA editing index run statistics
params.EIrun_stats_path = "${params.mount_path}/${params.EI_run_stats_relative}"
// Fastp statistics result
params.fastp_jsons = "${params.mount_path}/${params.fastp_jsons_relative}"
// STAR statistics result
params.star_stats = "${params.mount_path}/${params.star_stats_relative}"
// CMPileup results
params.cmpileups_tables = "${params.mount_path}/${params.cmpileups_tables_relative}"
// Salmon results
params.genes_expressions="${params.mount_path}/${params.genes_expressions_relative}"


// all relevant changeable params is untill here, the rest is fixed and should not be changed
//-------------------------------------------------- configurations for nextflow ------------------------------------

process {
    // AWS spot interruption - exit code 143
    errorStrategy = { ((task.exitStatus == 143 && task.attempt <=7) || task.attempt <=2) ? 'retry' : 'ignore' }
    maxRetries = 9
    maxErrors = 10000
    executor = 'awsbatch'
    queue = params.process_queue
    withName:download {
        container = 'levanonlab/sratoolkit:3.2.1'
    }
    withName:preprocess {
        container = 'levanonlab/fastp:0.23.4--hadf994f_2'
    }
    withName:exp_quant {
    container = 'levanonlab/salmon:1.10.2--hecfa306_0'
    }
    withName:alignment {
        container = 'levanonlab/star:2.7.10b--h9ee0642_0'
    }
    withName:cmpileup {
        container = 'levanonlab/cmpileup:1.0'
    }
    withName:AEI_and_CEI {
        container = 'levanonlab/rna-editing-index-lite:1.0.time'
    }
}




aws{
    maxSpotAttempts = 0
    client{
        endpoint = "https://s3.${params.ecr_region}.amazonaws.com"
        s3PathStyleAccess = true
    }
    region = params.ecr_region
    batch {
        platformType = 'fargate'
        jobRole = "$params.jobRole"
        executionRole = "$params.executionRole"
    }
}

docker.enabled = true
wave.enabled = true
executor.submitRateLimit='20/1min'
executor.queueSize = 800
wave.retryPolicy.delay='15000ms'
executor.retry.delay='50000ms'

tower {
  accessToken = "$params.tower_access_token"
  workspaceId = "$params.workspace_id"
}